{"data":{"site":{"siteMetadata":{"title":"Toweave's blog. Power by Gatsby & React.","author":"Toweave"}},"markdownRemark":{"id":"4dc53406-1f07-596e-8325-d2a2aee82e5c","excerpt":"console 主要方法:\n一般情况下我们用来输入信息的方法主要是用到如下四个 1、console.log 用于输出普通信息 2、console.info 用于输出提示性信息 3、console.error 用于输出错误信息 4、console.warn 用于输出警示信息 5、console.group…","html":"<p>console 主要方法:\n一般情况下我们用来输入信息的方法主要是用到如下四个</p>\n<ul>\n<li>1、console.log 用于输出普通信息</li>\n<li>2、console.info 用于输出提示性信息</li>\n<li>3、console.error 用于输出错误信息</li>\n<li>4、console.warn 用于输出警示信息</li>\n<li>5、console.group 输出一组信息的开头</li>\n<li>6、console.groupEnd 结束一组输出信息</li>\n<li>7、console.assert 对输入的表达式进行断言，只\n有表达式为false时，才输出相应的信息到控制台</li>\n<li>8、console.count （这个方法非常实用哦）当你想统计代码被执行的次数</li>\n<li>9、console.dir (这个方法是我经常使用的 可不知道比for in方便了多少) 直接将该DOM结点以DOM树的结构进行输出，可以详细查对象的方法发展等等</li>\n<li>10、console.time 计时开始</li>\n<li>11、console.timeEnd 计时结束（看了下面的图你瞬间就感受到它的厉害了）</li>\n<li>12、console.profile 和 console.profileEnd 配合一起使用来查看CPU使用相关信息</li>\n<li>13、console.timeLine 和 console.timeLineEnd 配合一起记录一段时间轴</li>\n<li>14、console.trace 堆栈跟踪相关的调试</li>\n<li>15、console.table 表格形式展示</li>\n</ul>","frontmatter":{"date":"Monday, April 1st 2019, 10:31:53 am","title":"console 你知道到吗？","tags":["HOT","JavaScript","console"],"description":"console 主要方法"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/console-api/","previous":{"fields":{"slug":"/htmlcss/2019-04-01-1px-summary/"},"frontmatter":{"title":"移动端 1px 边框","tags":["HOT","HTML"]}},"next":{"fields":{"slug":"/javascript/float-point-number/"},"frontmatter":{"title":"浮点数运算的精度问题","tags":["HOT","JavaScript","精选"]}}}}